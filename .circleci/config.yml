# Ruby CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-ruby/ for more details
#
version: 2
jobs:
  build:
    docker:
      # specify the version you desire here
       - image: circleci/ruby:2.4.1-node-browsers
         environment:
           - CC_TEST_REPORTER_ID=72ef38796ce30615e64513031e7a3f0b007782505773e01b940dcbaad869b5ca
           - DATABASE_URL=postgres://ubuntu@localhost:5432/circle_test
           - PG_HOST=localhost
           - PG_USER=ubuntu
           - RAILS_ENV=test
           - RACK_ENV=test
       - image: circleci/postgres:9.4
         environment:
           - POSTGRES_USER=ubuntu
           - POSTGRES_DB=circle_test

    working_directory: ~/capacitor

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-bundle-{{ checksum "Gemfile.lock" }}

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle && gem install mailcatcher

      - save_cache:
          paths:
            - vendor/bundle
          key: v1-bundle-{{ checksum "Gemfile.lock" }}

      # Database setup
      - run: bundle exec rake db:create
      - run: bundle exec rake db:schema:load

      - run: curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
      - run: chmod +x ./cc-test-reporter
      # run tests!
      - run: sudo mkdir -p $CIRCLE_TEST_REPORTS/simplecov
      - run: ./cc-test-reporter before-build
      - run:
          name: run tests
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"

            echo $TEST_FILES

            bundle exec rspec --format progress \
                            --format RspecJunitFormatter \
                            --out /tmp/test-results/rspec.xml \
                            --format progress

      - run: ./cc-test-reporter format-coverage -t simplecov $CIRCLE_ARTIFACTS/coverage/.resultset.json
      - run: ./cc-test-reporter upload-coverage
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
      - run:
          name: Mailcatcher
          command: mailcatcher
          background: true
          when: always
      - run:
          name: Rails Server for Feature Tests
          command: rails s
          background: true
          environment:
            RAILS_ENV: development
            RACK_ENV: development
          when: always
      - run:
          name: Run Cucumber
          command: bundle exec cucumber
          environment:
            RAILS_ENV: development
            RACK_ENV: development
          when: always
